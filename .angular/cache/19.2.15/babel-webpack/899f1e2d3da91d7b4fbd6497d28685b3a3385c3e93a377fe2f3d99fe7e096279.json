{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, signal, computed } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nlet OverviewComponent = class OverviewComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n    // Chart data signals\n    this.ageData = signal([]);\n    this.statusData = signal([]);\n    this.locationData = signal([]);\n    this.visitsData = signal([]);\n    // Computed statistics\n    this.totalVisits = computed(() => this.visitsData().reduce((sum, day) => sum + day.visits, 0));\n    this.totalRegistrations = computed(() => this.visitsData().reduce((sum, day) => sum + day.registrations, 0));\n    this.conversionRate = computed(() => {\n      const visits = this.totalVisits();\n      const registrations = this.totalRegistrations();\n      return visits > 0 ? Number((registrations / visits * 100).toFixed(1)) : 0;\n    });\n    // Chart options\n    this.chartColorScheme = {\n      domain: [\"#2196F3\", \"#4CAF50\", \"#FF9800\", \"#F44336\", \"#9C27B0\", \"#00BCD4\"]\n    };\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.ageData.set(this.dashboardService.getAgeData());\n    this.statusData.set(this.dashboardService.getStatusData());\n    this.locationData.set(this.dashboardService.getLocationData());\n    this.visitsData.set(this.dashboardService.getVisitsData());\n  }\n  onChartSelect(event) {\n    console.log(\"Chart selection:\", event);\n  }\n  onChartActivate(event) {\n    console.log(\"Chart activate:\", event);\n  }\n  onChartDeactivate(event) {\n    console.log(\"Chart deactivate:\", event);\n  }\n};\nOverviewComponent = __decorate([Component({\n  selector: \"app-overview\",\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatIconModule, NgxChartsModule],\n  templateUrl: \"./overview.component.html\",\n  styleUrls: [\"./overview.component.scss\"]\n})], OverviewComponent);\nexport { OverviewComponent };","map":{"version":3,"names":["Component","signal","computed","CommonModule","MatCardModule","MatIconModule","NgxChartsModule","OverviewComponent","constructor","dashboardService","ageData","statusData","locationData","visitsData","totalVisits","reduce","sum","day","visits","totalRegistrations","registrations","conversionRate","Number","toFixed","chartColorScheme","domain","ngOnInit","loadChartData","set","getAgeData","getStatusData","getLocationData","getVisitsData","onChartSelect","event","console","log","onChartActivate","onChartDeactivate","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["/home/user/git/v0-iisa/src/app/pages/overview/overview.component.ts"],"sourcesContent":["import { Component, signal, computed, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { MatCardModule } from \"@angular/material/card\"\nimport { MatIconModule } from \"@angular/material/icon\"\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\"\nimport type { DashboardService } from \"../../services/dashboard.service\"\nimport type { ChartData, LocationData, VisitData } from \"../../models/candidate.model\"\n\n@Component({\n  selector: \"app-overview\",\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatIconModule, NgxChartsModule],\n  templateUrl: \"./overview.component.html\",\n  styleUrls: [\"./overview.component.scss\"],\n})\nexport class OverviewComponent implements OnInit {\n  // Chart data signals\n  ageData = signal<ChartData[]>([])\n  statusData = signal<ChartData[]>([])\n  locationData = signal<LocationData[]>([])\n  visitsData = signal<VisitData[]>([])\n\n  // Computed statistics\n  totalVisits = computed(() => this.visitsData().reduce((sum, day) => sum + day.visits, 0))\n  totalRegistrations = computed(() => this.visitsData().reduce((sum, day) => sum + day.registrations, 0))\n  conversionRate = computed(() => {\n    const visits = this.totalVisits()\n    const registrations = this.totalRegistrations()\n    return visits > 0 ? Number(((registrations / visits) * 100).toFixed(1)) : 0\n  })\n\n  // Chart options\n  chartColorScheme = {\n    domain: [\"#2196F3\", \"#4CAF50\", \"#FF9800\", \"#F44336\", \"#9C27B0\", \"#00BCD4\"],\n  }\n\n  constructor(public dashboardService: DashboardService) {}\n\n  ngOnInit(): void {\n    this.loadChartData()\n  }\n\n  private loadChartData(): void {\n    this.ageData.set(this.dashboardService.getAgeData())\n    this.statusData.set(this.dashboardService.getStatusData())\n    this.locationData.set(this.dashboardService.getLocationData())\n    this.visitsData.set(this.dashboardService.getVisitsData())\n  }\n\n  onChartSelect(event: any): void {\n    console.log(\"Chart selection:\", event)\n  }\n\n  onChartActivate(event: any): void {\n    console.log(\"Chart activate:\", event)\n  }\n\n  onChartDeactivate(event: any): void {\n    console.log(\"Chart deactivate:\", event)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}