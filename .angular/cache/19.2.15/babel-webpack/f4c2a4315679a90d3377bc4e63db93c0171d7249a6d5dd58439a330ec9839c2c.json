{"ast":null,"code":"import { computed, signal } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@swimlane/ngx-charts\";\nconst _c0 = () => [];\nexport class AnalyticsComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n    // Chart data signals\n    this.visitsData = signal([]);\n    this.hobbiesData = signal([]);\n    this.results = computed(() => {\n      [{\n        name: \"Visits\",\n        series: this.visitsData().map(d => ({\n          name: d.date,\n          value: d.visits\n        }))\n      }, {\n        name: \"Registrations\",\n        series: this.visitsData().map(d => ({\n          name: d.date,\n          value: d.registrations\n        }))\n      }];\n    });\n    // Chart options\n    this.chartColorScheme = {\n      domain: [\"#2196F3\", \"#4CAF50\", \"#FF9800\", \"#F44336\", \"#9C27B0\", \"#00BCD4\"]\n    };\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.visitsData.set(this.dashboardService.getVisitsData());\n    this.hobbiesData.set(this.dashboardService.getHobbiesData());\n  }\n  static {\n    this.ɵfac = function AnalyticsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AnalyticsComponent)(i0.ɵɵdirectiveInject(i1.DashboardService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AnalyticsComponent,\n      selectors: [[\"app-analytics\"]],\n      decls: 25,\n      vars: 15,\n      consts: [[1, \"analytics-container\"], [1, \"page-header\"], [1, \"analytics-grid\"], [1, \"chart-card\"], [\"xAxisLabel\", \"Date\", \"yAxisLabel\", \"Count\", 3, \"results\", \"scheme\", \"xAxis\", \"yAxis\", \"showXAxisLabel\", \"showYAxisLabel\", \"animations\"], [\"xAxisLabel\", \"Count\", \"yAxisLabel\", \"Hobbies\", 3, \"results\", \"scheme\", \"xAxis\", \"yAxis\", \"showXAxisLabel\", \"showYAxisLabel\", \"animations\"]],\n      template: function AnalyticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Analytics Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5, \"Comprehensive insights and data visualization\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"mat-card\", 3)(8, \"mat-card-header\")(9, \"mat-card-title\")(10, \"mat-icon\");\n          i0.ɵɵtext(11, \"trending_up\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12, \" Visits vs Registrations \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-card-subtitle\");\n          i0.ɵɵtext(14, \"Daily website traffic and conversion\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"mat-card-content\");\n          i0.ɵɵelement(16, \"ngx-charts-area-chart\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"mat-card\", 3)(18, \"mat-card-header\")(19, \"mat-card-title\");\n          i0.ɵɵtext(20, \"Popular Hobbies\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"mat-card-subtitle\");\n          i0.ɵɵtext(22, \"Most common interests among candidates\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"mat-card-content\");\n          i0.ɵɵelement(24, \"ngx-charts-bar-horizontal\", 5);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"results\", i0.ɵɵpureFunction0(14, _c0))(\"scheme\", \"red\")(\"xAxis\", true)(\"yAxis\", true)(\"showXAxisLabel\", true)(\"showYAxisLabel\", true)(\"animations\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"results\", ctx.hobbiesData())(\"scheme\", \"red\")(\"xAxis\", true)(\"yAxis\", true)(\"showXAxisLabel\", true)(\"showYAxisLabel\", true)(\"animations\", true);\n        }\n      },\n      dependencies: [CommonModule, MatCardModule, i2.MatCard, i2.MatCardContent, i2.MatCardHeader, i2.MatCardSubtitle, i2.MatCardTitle, MatIconModule, i3.MatIcon, NgxChartsModule, i4.AreaChartComponent, i4.BarHorizontalComponent],\n      styles: [\".analytics-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 24px;\\n}\\n\\n.page-header[_ngcontent-%COMP%] {\\n  margin-bottom: 32px;\\n}\\n.page-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin: 0 0 8px 0;\\n  font-size: 32px;\\n  font-weight: 500;\\n  color: #424242;\\n}\\n.page-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 16px;\\n  color: #757575;\\n}\\n\\n.analytics-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\\n  gap: 24px;\\n}\\n\\n.chart-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n.chart-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%] {\\n  height: 400px;\\n}\\n\\n@media (max-width: 768px) {\\n  .analytics-container[_ngcontent-%COMP%] {\\n    padding: 16px;\\n  }\\n  .analytics-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n  .chart-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%] {\\n    height: 300px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYW5hbHl0aWNzL2FuYWx5dGljcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7QUFDRTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUNKO0FBRUU7RUFDRSxTQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUFBSjs7QUFJQTtFQUNFLGFBQUE7RUFDQSwyREFBQTtFQUNBLFNBQUE7QUFERjs7QUFNSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7QUFITjtBQU9FO0VBQ0UsYUFBQTtBQUxKOztBQVNBO0VBQ0U7SUFDRSxhQUFBO0VBTkY7RUFTQTtJQUNFLDBCQUFBO0VBUEY7RUFVQTtJQUNFLGFBQUE7RUFSRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmFuYWx5dGljcy1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDI0cHg7XG59XG5cbi5wYWdlLWhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDMycHg7XG5cbiAgaDEge1xuICAgIG1hcmdpbjogMCAwIDhweCAwO1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGNvbG9yOiAjNDI0MjQyO1xuICB9XG5cbiAgcCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBjb2xvcjogIzc1NzU3NTtcbiAgfVxufVxuXG4uYW5hbHl0aWNzLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDUwMHB4LCAxZnIpKTtcbiAgZ2FwOiAyNHB4O1xufVxuXG4uY2hhcnQtY2FyZCB7XG4gIG1hdC1jYXJkLWhlYWRlciB7XG4gICAgbWF0LWNhcmQtdGl0bGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDhweDtcbiAgICB9XG4gIH1cblxuICBtYXQtY2FyZC1jb250ZW50IHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuYW5hbHl0aWNzLWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxuXG4gIC5hbmFseXRpY3MtZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAuY2hhcnQtY2FyZCBtYXQtY2FyZC1jb250ZW50IHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["computed","signal","CommonModule","MatCardModule","MatIconModule","NgxChartsModule","AnalyticsComponent","constructor","dashboardService","visitsData","hobbiesData","results","name","series","map","d","date","value","visits","registrations","chartColorScheme","domain","ngOnInit","loadChartData","set","getVisitsData","getHobbiesData","i0","ɵɵdirectiveInject","i1","DashboardService","selectors","decls","vars","consts","template","AnalyticsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","i2","MatCard","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i3","MatIcon","i4","AreaChartComponent","BarHorizontalComponent","styles"],"sources":["/home/user/git/v0-iisa/src/app/pages/analytics/analytics.component.ts","/home/user/git/v0-iisa/src/app/pages/analytics/analytics.component.html"],"sourcesContent":["import { Component, computed, signal, type OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { DashboardService } from \"../../services/dashboard.service\";\nimport { ChartData, VisitData } from \"../../models/candidate.model\";\n\n@Component({\n  selector: \"app-analytics\",\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatIconModule, NgxChartsModule],\n  templateUrl: \"./analytics.component.html\",\n  styleUrls: [\"./analytics.component.scss\"],\n})\nexport class AnalyticsComponent implements OnInit {\n  // Chart data signals\n  visitsData = signal<VisitData[]>([]);\n  hobbiesData = signal<ChartData[]>([]);\n\n  results = computed(() => {\n    [\n    {\n      name: \"Visits\",\n      series: this.visitsData().map((d) => ({ name: d.date, value: d.visits })),\n    },\n    {\n      name: \"Registrations\",\n      series: this.visitsData().map((d) => ({\n        name: d.date,\n        value: d.registrations,\n      })),\n    },\n  ];\n\n  })\n  // Chart options\n  chartColorScheme = {\n    domain: [\"#2196F3\", \"#4CAF50\", \"#FF9800\", \"#F44336\", \"#9C27B0\", \"#00BCD4\"],\n  };\n\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit(): void {\n    this.loadChartData();\n  }\n\n  private loadChartData(): void {\n    this.visitsData.set(this.dashboardService.getVisitsData());\n    this.hobbiesData.set(this.dashboardService.getHobbiesData());\n  }\n}\n","<div class=\"analytics-container\">\n  <div class=\"page-header\">\n    <h1>Analytics Dashboard</h1>\n    <p>Comprehensive insights and data visualization</p>\n  </div>\n\n  <div class=\"analytics-grid\">\n    <!-- Visits vs Registrations Chart -->\n    <mat-card class=\"chart-card\">\n      <mat-card-header>\n        <mat-card-title>\n          <mat-icon>trending_up</mat-icon>\n          Visits vs Registrations\n        </mat-card-title>\n        <mat-card-subtitle>Daily website traffic and conversion</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <ngx-charts-area-chart\n          [results]=\"[]\"\n          [scheme]=\"'red'\"\n          [xAxis]=\"true\"\n          [yAxis]=\"true\"\n          [showXAxisLabel]=\"true\"\n          [showYAxisLabel]=\"true\"\n          xAxisLabel=\"Date\"\n          yAxisLabel=\"Count\"\n          [animations]=\"true\">\n        </ngx-charts-area-chart>\n      </mat-card-content>\n    </mat-card>\n\n    <!-- Popular Hobbies Chart -->\n    <mat-card class=\"chart-card\">\n      <mat-card-header>\n        <mat-card-title>Popular Hobbies</mat-card-title>\n        <mat-card-subtitle>Most common interests among candidates</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <ngx-charts-bar-horizontal\n          [results]=\"hobbiesData()\"\n          [scheme]=\"'red'\"\n          [xAxis]=\"true\"\n          [yAxis]=\"true\"\n          [showXAxisLabel]=\"true\"\n          [showYAxisLabel]=\"true\"\n          xAxisLabel=\"Count\"\n          yAxisLabel=\"Hobbies\"\n          [animations]=\"true\">\n        </ngx-charts-bar-horizontal>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}